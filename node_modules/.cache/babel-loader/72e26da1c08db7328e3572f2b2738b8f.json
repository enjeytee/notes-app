{"ast":null,"code":"var _jsxFileName = \"/Volumes/256GB/REACT/notes-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Sidebar from './components/Sidebar';\nimport Editor from \"./components/Editor\";\nimport { data } from './data';\nimport Split from \"react-split\";\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [notes, setNotes] = React.useState(JSON.parse(localStorage.get('notes')) || []);\n  const [currentNoteId, setCurrentNoteId] = Rea;\n  ct.useState(notes[0] && notes[0].id || \"\");\n  React.useEffect(() => {\n    localStorage.setItem('notes', JSON.stringify(notes));\n  }, [notes]);\n\n  function createNewNote() {\n    const newNote = {\n      id: nanoid(),\n      body: \"# Type your markdown note's title here\"\n    };\n    setNotes(prevNotes => [newNote, ...prevNotes]);\n    setCurrentNoteId(newNote.id);\n  }\n\n  function updateNote(text) {\n    setNotes(oldNotes => oldNotes.map(oldNote => {\n      return oldNote.id === currentNoteId ? { ...oldNote,\n        body: text\n      } : oldNote;\n    }));\n  }\n\n  function findCurrentNote() {\n    return notes.find(note => {\n      return note.id === currentNoteId;\n    }) || notes[0];\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: notes.length > 0 ? /*#__PURE__*/_jsxDEV(Split, {\n      sizes: [30, 70],\n      direction: \"horizontal\",\n      className: \"split\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        notes: notes,\n        currentNote: findCurrentNote(),\n        setCurrentNoteId: setCurrentNoteId,\n        newNote: createNewNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }, this), currentNoteId && notes.length > 0 && /*#__PURE__*/_jsxDEV(Editor, {\n        currentNote: findCurrentNote(),\n        updateNote: updateNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-notes\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"You have no notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"first-note\",\n        onClick: createNewNote,\n        children: \"Create one now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"kBOyOjBO112fXHvDY7pfzFQ7Yp4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Sidebar","Editor","data","Split","nanoid","App","notes","setNotes","useState","JSON","parse","localStorage","get","currentNoteId","setCurrentNoteId","Rea","ct","id","useEffect","setItem","stringify","createNewNote","newNote","body","prevNotes","updateNote","text","oldNotes","map","oldNote","findCurrentNote","find","note","length"],"sources":["/Volumes/256GB/REACT/notes-app/src/App.js"],"sourcesContent":["import React from \"react\"\nimport Sidebar from './components/Sidebar'\nimport Editor from \"./components/Editor\"\nimport {data} from './data'\nimport Split from \"react-split\"\nimport {nanoid} from \"nanoid\"\n\n\nfunction App() {\n  const [notes, setNotes] = React.useState(\n    JSON.parse(localStorage.get('notes')) || []\n  )\n  const [currentNoteId, setCurrentNoteId] = Rea\n  ct.useState(\n      (notes[0] && notes[0].id) || \"\"\n  )\n  \n  React.useEffect(() => {\n    localStorage.setItem('notes', JSON.stringify(notes))\n  }, [notes])\n\n  function createNewNote() {\n      const newNote = {\n          id: nanoid(),\n          body: \"# Type your markdown note's title here\"\n      }\n      setNotes(prevNotes => [newNote, ...prevNotes])\n      setCurrentNoteId(newNote.id)\n  }\n  \n  function updateNote(text) {\n      setNotes(oldNotes => oldNotes.map(oldNote => {\n          return oldNote.id === currentNoteId\n              ? { ...oldNote, body: text }\n              : oldNote\n      }))\n  }\n  \n  function findCurrentNote() {\n      return notes.find(note => {\n          return note.id === currentNoteId\n      }) || notes[0]\n  }\n  \n  return (\n      <main>\n      {\n          notes.length > 0 \n          ?\n          <Split \n              sizes={[30, 70]} \n              direction=\"horizontal\" \n              className=\"split\"\n          >\n              <Sidebar\n                  notes={notes}\n                  currentNote={findCurrentNote()}\n                  setCurrentNoteId={setCurrentNoteId}\n                  newNote={createNewNote}\n              />\n              {\n                  currentNoteId && \n                  notes.length > 0 &&\n                  <Editor \n                      currentNote={findCurrentNote()} \n                      updateNote={updateNote} \n                  />\n              }\n          </Split>\n          :\n          <div className=\"no-notes\">\n              <h1>You have no notes</h1>\n              <button \n                  className=\"first-note\" \n                  onClick={createNewNote}\n              >\n                  Create one now\n              </button>\n          </div>\n          \n      }\n      </main>\n  )\n}\nexport default App"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAAQC,IAAR,QAAmB,QAAnB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,MAAR,QAAqB,QAArB;;;AAGA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,KAAK,CAACS,QAAN,CACxBC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,GAAb,CAAiB,OAAjB,CAAX,KAAyC,EADjB,CAA1B;EAGA,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCC,GAA1C;EACAC,EAAE,CAACR,QAAH,CACKF,KAAK,CAAC,CAAD,CAAL,IAAYA,KAAK,CAAC,CAAD,CAAL,CAASW,EAAtB,IAA6B,EADjC;EAIAlB,KAAK,CAACmB,SAAN,CAAgB,MAAM;IACpBP,YAAY,CAACQ,OAAb,CAAqB,OAArB,EAA8BV,IAAI,CAACW,SAAL,CAAed,KAAf,CAA9B;EACD,CAFD,EAEG,CAACA,KAAD,CAFH;;EAIA,SAASe,aAAT,GAAyB;IACrB,MAAMC,OAAO,GAAG;MACZL,EAAE,EAAEb,MAAM,EADE;MAEZmB,IAAI,EAAE;IAFM,CAAhB;IAIAhB,QAAQ,CAACiB,SAAS,IAAI,CAACF,OAAD,EAAU,GAAGE,SAAb,CAAd,CAAR;IACAV,gBAAgB,CAACQ,OAAO,CAACL,EAAT,CAAhB;EACH;;EAED,SAASQ,UAAT,CAAoBC,IAApB,EAA0B;IACtBnB,QAAQ,CAACoB,QAAQ,IAAIA,QAAQ,CAACC,GAAT,CAAaC,OAAO,IAAI;MACzC,OAAOA,OAAO,CAACZ,EAAR,KAAeJ,aAAf,GACD,EAAE,GAAGgB,OAAL;QAAcN,IAAI,EAAEG;MAApB,CADC,GAEDG,OAFN;IAGH,CAJoB,CAAb,CAAR;EAKH;;EAED,SAASC,eAAT,GAA2B;IACvB,OAAOxB,KAAK,CAACyB,IAAN,CAAWC,IAAI,IAAI;MACtB,OAAOA,IAAI,CAACf,EAAL,KAAYJ,aAAnB;IACH,CAFM,KAEDP,KAAK,CAAC,CAAD,CAFX;EAGH;;EAED,oBACI;IAAA,UAEIA,KAAK,CAAC2B,MAAN,GAAe,CAAf,gBAEA,QAAC,KAAD;MACI,KAAK,EAAE,CAAC,EAAD,EAAK,EAAL,CADX;MAEI,SAAS,EAAC,YAFd;MAGI,SAAS,EAAC,OAHd;MAAA,wBAKI,QAAC,OAAD;QACI,KAAK,EAAE3B,KADX;QAEI,WAAW,EAAEwB,eAAe,EAFhC;QAGI,gBAAgB,EAAEhB,gBAHtB;QAII,OAAO,EAAEO;MAJb;QAAA;QAAA;QAAA;MAAA,QALJ,EAYQR,aAAa,IACbP,KAAK,CAAC2B,MAAN,GAAe,CADf,iBAEA,QAAC,MAAD;QACI,WAAW,EAAEH,eAAe,EADhC;QAEI,UAAU,EAAEL;MAFhB;QAAA;QAAA;QAAA;MAAA,QAdR;IAAA;MAAA;MAAA;MAAA;IAAA,QAFA,gBAuBA;MAAK,SAAS,EAAC,UAAf;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QACI,SAAS,EAAC,YADd;QAEI,OAAO,EAAEJ,aAFb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA;EAzBJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAuCD;;GA3EQhB,G;;KAAAA,G;AA4ET,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}