{"ast":null,"code":"var _jsxFileName = \"/Volumes/256GB/REACT/notes-app/src/components/Editor.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport ReactMde from \"react-mde\";\nimport Showdown from \"showdown\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Editor(_ref) {\n  _s();\n\n  let {\n    currentNote,\n    updateNote\n  } = _ref;\n  const [selectedTab, setSelectedTab] = React.useState(\"write\");\n  const converter = new Showdown.Converter({\n    tables: true,\n    simplifiedAutoLink: true,\n    strikethrough: true,\n    tasklists: true\n  });\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"pane editor\",\n    children: /*#__PURE__*/_jsxDEV(ReactMde, {\n      value: currentNote.body,\n      onChange: updateNote,\n      selectedTab: selectedTab,\n      onTabChange: setSelectedTab,\n      generateMarkdownPreview: markdown => Promise.resolve(converter.makeHtml(markdown)),\n      minEditorHeight: 80,\n      heightUnits: \"vh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Editor, \"iVedAuhEQs+ILte+qCxIXIY33nY=\");\n\n_c = Editor;\nexport default Editor;\n\nvar _c;\n\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"names":["React","ReactMde","Showdown","Editor","currentNote","updateNote","selectedTab","setSelectedTab","useState","converter","Converter","tables","simplifiedAutoLink","strikethrough","tasklists","body","markdown","Promise","resolve","makeHtml"],"sources":["/Volumes/256GB/REACT/notes-app/src/components/Editor.js"],"sourcesContent":["import React from \"react\"\nimport ReactMde from \"react-mde\"\nimport Showdown from \"showdown\"\n\nfunction Editor({ currentNote, updateNote }) {\n    const [selectedTab, setSelectedTab] = React.useState(\"write\")\n\n    const converter = new Showdown.Converter({\n        tables: true,\n        simplifiedAutoLink: true,\n        strikethrough: true,\n        tasklists: true,\n    })  \n\n    return (\n        <section className=\"pane editor\">\n            <ReactMde\n                value={currentNote.body}\n                onChange={updateNote}\n                selectedTab={selectedTab}\n                onTabChange={setSelectedTab}\n                generateMarkdownPreview={(markdown) =>\n                    Promise.resolve(converter.makeHtml(markdown))\n                }\n                minEditorHeight={80}\n                heightUnits=\"vh\"\n            />\n        </section>\n    )\n}\nexport default Editor"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,QAAP,MAAqB,UAArB;;;AAEA,SAASC,MAAT,OAA6C;EAAA;;EAAA,IAA7B;IAAEC,WAAF;IAAeC;EAAf,CAA6B;EACzC,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,KAAK,CAACQ,QAAN,CAAe,OAAf,CAAtC;EAEA,MAAMC,SAAS,GAAG,IAAIP,QAAQ,CAACQ,SAAb,CAAuB;IACrCC,MAAM,EAAE,IAD6B;IAErCC,kBAAkB,EAAE,IAFiB;IAGrCC,aAAa,EAAE,IAHsB;IAIrCC,SAAS,EAAE;EAJ0B,CAAvB,CAAlB;EAOA,oBACI;IAAS,SAAS,EAAC,aAAnB;IAAA,uBACI,QAAC,QAAD;MACI,KAAK,EAAEV,WAAW,CAACW,IADvB;MAEI,QAAQ,EAAEV,UAFd;MAGI,WAAW,EAAEC,WAHjB;MAII,WAAW,EAAEC,cAJjB;MAKI,uBAAuB,EAAGS,QAAD,IACrBC,OAAO,CAACC,OAAR,CAAgBT,SAAS,CAACU,QAAV,CAAmBH,QAAnB,CAAhB,CANR;MAQI,eAAe,EAAE,EARrB;MASI,WAAW,EAAC;IAThB;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAeH;;GAzBQb,M;;KAAAA,M;AA0BT,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}