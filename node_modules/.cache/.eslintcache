[{"/Volumes/256GB/REACT/notes-app/src/index.js":"1","/Volumes/256GB/REACT/notes-app/src/App.js":"2","/Volumes/256GB/REACT/notes-app/src/components/Sidebar.js":"3","/Volumes/256GB/REACT/notes-app/src/components/Editor.js":"4","/Volumes/256GB/REACT/notes-app/src/data.js":"5"},{"size":210,"mtime":1657794791000,"results":"6","hashOfConfig":"7"},{"size":2498,"mtime":1657811414000,"results":"8","hashOfConfig":"7"},{"size":1142,"mtime":1657811149000,"results":"9","hashOfConfig":"7"},{"size":888,"mtime":1657795230000,"results":"10","hashOfConfig":"7"},{"size":413,"mtime":1657794869000,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"1xnyrjl",{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Volumes/256GB/REACT/notes-app/src/index.js",[],[],[],"/Volumes/256GB/REACT/notes-app/src/App.js",["30"],[],"/Volumes/256GB/REACT/notes-app/src/components/Sidebar.js",["31","32"],[],"import React from \"react\"\n\nfunction Sidebar(props) {\n    const [noteTitle, setNoteTitle] = React.useState(\"\")\n    console.log(props)\n    const noteElements = props.notes.map((note, index) => (\n        <div key={note.id}>\n            <div\n                \n                className={`title ${\n                    note.id === props.currentNote.id ? \"selected-note\" : \"\"\n                }`}\n                onClick={() => props.setCurrentNoteId(note.id)}\n            >\n                <h4 className=\"text-snippet\">{note.body.split(\"\\n\")[0]}</h4>\n                <button\n                    className=\"delete-btn\"\n                    onClick={(event) => props.deleteNote(event, note.id)}\n                >\n                    <i className=\"gg-trash trash-icon\"></i>\n                </button>\n            </div>\n        </div>\n    ))\n    \n    return (\n        <section className=\"pane sidebar\">\n            <div className=\"sidebar--header\">\n                <h3>Notes</h3>\n                <button className=\"new-note\" onClick={props.newNote}>+</button>\n            </div>\n            {noteElements}\n        </section>\n    )\n}\nexport default Sidebar",[],"/Volumes/256GB/REACT/notes-app/src/components/Editor.js",[],[],"/Volumes/256GB/REACT/notes-app/src/data.js",[],[],{"ruleId":"33","severity":1,"message":"34","line":4,"column":9,"nodeType":"35","messageId":"36","endLine":4,"endColumn":13},{"ruleId":"33","severity":1,"message":"37","line":4,"column":12,"nodeType":"35","messageId":"36","endLine":4,"endColumn":21},{"ruleId":"33","severity":1,"message":"38","line":4,"column":23,"nodeType":"35","messageId":"36","endLine":4,"endColumn":35},"no-unused-vars","'data' is defined but never used.","Identifier","unusedVar","'noteTitle' is assigned a value but never used.","'setNoteTitle' is assigned a value but never used."]